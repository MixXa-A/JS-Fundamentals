Примитивни типове данни: 7 на брой

✅ string – текстови данни
Пример: let name = "ChatGPT";

✅ number – числови стойности (цяло число или с плаваща запетая)
Пример: let age = 25;

✅ bigint – числа, по-големи от Number.MAX_SAFE_INTEGER
Пример: let bigNumber = 12345678901234567890n;

✅BigInt — огромни числа
BigInt е въведен в ES11 (2020) и позволява работа с много големи числа, които надвишават лимита на Number (2^53 - 1).

 Пример:
javascript
Copy
Edit
let bigNumber = 123456789012345678901234567890n;
let anotherBig = BigInt("987654321987654321987654321");

console.log(bigNumber + anotherBig);
 Какво трябва да знаеш за BigInt?

Завършва с n, за да покаже, че е BigInt.
Не може да се смесва с обикновени числа (number). Пример: BigInt(5) + 2 хвърля грешка.
Поддържа същите оператори: +, -, *, /, но / закръгля надолу.

✅ boolean – логически стойности (true или false)
Пример: let isCodingFun = true;

✅ undefined – променлива, на която не е зададена стойност
Пример: let x;

✅ null – специална стойност, която представлява "нищо"
Пример: let y = null;

✅ symbol – уникален и неизменяем идентификатор

За какво се ползва Symbol?

За уникални ключове в обекти — няма риск да презапишеш нещо.
Вградени символи като Symbol.iterator, Symbol.toStringTag, и др.

Пример: let symbol1 = Symbol("unique");
----------------
Сложен (reference) тип данни:

✅ object – съвкупност от данни и функционалности (може да съдържа масиви, функции и други обекти)
Пример:
let person = {
  name: "Alex",
  age: 30,
  isStudent: false
};
!!!!!!!!!!! 
✅Масивите [],
 функциите function() {},
  дата обектите Date и други по-сложни структури също са подкатегории на обекта.